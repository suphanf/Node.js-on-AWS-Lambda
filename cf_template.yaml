Parameters:
  S3BucketForLambda:
    Type: String
    Default: suphan-fayong-public-lambda-functions
  S3BucketForOpenAPI:
    Type: String
    Default: suphan-fayong-public-openapi-specifications
  SenderEmail:
    Type: String
    Description: This sender email must have been verified in SES.

Resources:
  DonationLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Lambda role for Donation API
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement: 
        - Effect: "Allow"
          Principal: 
            Service: 
            - "lambda.amazonaws.com"
          Action: 
          - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
        - arn:aws:iam::aws:policy/AmazonSQSFullAccess
        - arn:aws:iam::aws:policy/AmazonSESFullAccess
  DonationCreate:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref S3BucketForLambda
        S3Key: donation-api/create.zip
      Description: Donation API - Create Function
      Handler: create.handler
      Role: !GetAtt DonationLambdaRole.Arn
      Runtime: nodejs16.x
      Environment:
        Variables:
          SQS_NAME: !GetAtt DonationConfirmationQueue.QueueName
  DonationList:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref S3BucketForLambda
        S3Key: donation-api/list.zip
      Description: Donation API - List Function
      Handler: list.handler
      Role: !GetAtt DonationLambdaRole.Arn
      Runtime: nodejs16.x
  DonationSearch:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref S3BucketForLambda
        S3Key: donation-api/search.zip
      Description: Donation API - Search Function
      Handler: search.handler
      Role: !GetAtt DonationLambdaRole.Arn
      Runtime: nodejs16.x
  DonationSendEmail:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref S3BucketForLambda
        S3Key: donation-api/send_email.zip
      Description: Donation API - Send Email Function
      Handler: send_email.handler
      Role: !GetAtt DonationLambdaRole.Arn
      Runtime: nodejs16.x
      Environment:
        Variables:
          SENDER_EMAIL: !Ref SenderEmail

  DonationConfirmationEvent:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      Enabled: true
      EventSourceArn: !GetAtt DonationConfirmationQueue.Arn
      FunctionName: !GetAtt DonationSendEmail.Arn

  DonationAPI:
    Type: AWS::ApiGateway::RestApi
    Properties:
      BodyS3Location:
        Bucket: !Ref S3BucketForOpenAPI
        Key: donation-api/openapi3.yaml
      Description: Making and viewing donations
      Parameters:
        endpointConfigurationTypes: REGIONAL

  DonationTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Donation
      AttributeDefinitions:
      - AttributeName: "email"
        AttributeType: "S"
      - AttributeName: "timestamp0"
        AttributeType: "S"
      KeySchema:
      - AttributeName: "email"
        KeyType: "HASH"
      - AttributeName: "timestamp0"
        KeyType: "RANGE"
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  DonationConfirmationQueue:
    Type: AWS::SQS::Queue
    Properties:
      DelaySeconds: 10
